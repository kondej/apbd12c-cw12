// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apbd12c_cw12.Data;

#nullable disable

namespace apbd12c_cw12.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apbd12c_cw12.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdClient");

                    b.HasIndex("Pesel")
                        .IsUnique();

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Email = "jan.kowalski@gmail.com",
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Pesel = "12345678910",
                            Telephone = "123456789"
                        },
                        new
                        {
                            IdClient = 2,
                            Email = "anna.nowak@gmail.com",
                            FirstName = "Anna",
                            LastName = "Nowak",
                            Pesel = "11111222333",
                            Telephone = "111222333"
                        });
                });

            modelBuilder.Entity("apbd12c_cw12.Models.ClientTrip", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDate")
                        .HasColumnType("int");

                    b.Property<int>("RegisteredAt")
                        .HasColumnType("int");

                    b.HasKey("IdClient", "IdTrip");

                    b.HasIndex("IdTrip");

                    b.ToTable("Client_Trip");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            IdTrip = 1,
                            RegisteredAt = 20250601
                        });
                });

            modelBuilder.Entity("apbd12c_cw12.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdCountry");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            Name = "Polska"
                        },
                        new
                        {
                            IdCountry = 2,
                            Name = "Niemcy"
                        },
                        new
                        {
                            IdCountry = 3,
                            Name = "Słowacja"
                        });
                });

            modelBuilder.Entity("apbd12c_cw12.Models.CountryTrip", b =>
                {
                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.HasKey("IdCountry", "IdTrip");

                    b.HasIndex("IdTrip");

                    b.ToTable("Country_Trip");

                    b.HasData(
                        new
                        {
                            IdCountry = 2,
                            IdTrip = 1
                        },
                        new
                        {
                            IdCountry = 1,
                            IdTrip = 2
                        },
                        new
                        {
                            IdCountry = 3,
                            IdTrip = 3
                        });
                });

            modelBuilder.Entity("apbd12c_cw12.Models.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdTrip");

                    b.ToTable("Trip");

                    b.HasData(
                        new
                        {
                            IdTrip = 1,
                            DateFrom = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wycieczka kulturoznawcza po Berlinie",
                            MaxPeople = 16,
                            Name = "Berlin"
                        },
                        new
                        {
                            IdTrip = 2,
                            DateFrom = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2025, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wycieczka plażoznawcza po Gdańsku",
                            MaxPeople = 20,
                            Name = "Gdańsk"
                        },
                        new
                        {
                            IdTrip = 3,
                            DateFrom = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wycieczka zamkoznawcza po Bratysławie",
                            MaxPeople = 12,
                            Name = "Bratysława"
                        });
                });

            modelBuilder.Entity("apbd12c_cw12.Models.ClientTrip", b =>
                {
                    b.HasOne("apbd12c_cw12.Models.Client", "Client")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd12c_cw12.Models.Trip", "Trip")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("apbd12c_cw12.Models.CountryTrip", b =>
                {
                    b.HasOne("apbd12c_cw12.Models.Country", "Country")
                        .WithMany("CountryTrips")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd12c_cw12.Models.Trip", "Trip")
                        .WithMany("CountryTrips")
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("apbd12c_cw12.Models.Client", b =>
                {
                    b.Navigation("ClientTrips");
                });

            modelBuilder.Entity("apbd12c_cw12.Models.Country", b =>
                {
                    b.Navigation("CountryTrips");
                });

            modelBuilder.Entity("apbd12c_cw12.Models.Trip", b =>
                {
                    b.Navigation("ClientTrips");

                    b.Navigation("CountryTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
